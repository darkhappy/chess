@startuml

'https://plantuml.com/class-diagram
namespace Models {
    abstract class Piece {
        - _colour : Colour
        - _previous : Nullable<Cell>
        - _current : Cell
        + Move() : bool
    }

    class Pawn extends Piece {
        + EnPassant()
        + Promote()
    }
    note bottom of Pawn
        Moves 1 cell <b>up</b>
        Attacks 1 cell <b>up-left</b> or <b>up-right</b>
        On initial position, can move 2 cells <b>up</b>
        Can en passant
    end note

    class Rook  extends Piece {

    }
    note bottom of Rook
        Moves and attacks 
        n cells <b>horizontally</b> or <b>vertically</b>
    end note

    class Knight extends Piece {

    }
    note bottom of Knight
        Moves and attacks 
        in an <b>L shape</b>
        Can go over other pieces
    end note

    class Bishop extends Piece {

    }
    note bottom of Bishop
        Moves and attacks 
        n cells <b>diagonally</b>
    end note

    class Queen extends Piece {

    }
    note bottom of Queen
        Moves and attacks 
        n cells <b>horizontally, vertically or diagonally</b>
    end note

    class King extends Piece {
        - _canCastle : bool
        + Castle()
    }
    note bottom of King
        Moves and attacks 
        1 cells <b>horizontally, vertically or diagonally</b>
        Can castle
    end note

    class Match {
        - _board : Board
        - _history : string[]
        - _tieCounter : int
        - _current : Colour
        + Export() : string
        + Turn (int start, int target) : bool
    }
    class Board {
        - _cells : Cell[]
        + ToString() : string
    }
    class Cell {
        - _item : Nullable<Piece>
        + ToString() : string

    }
    class Players {
        - _name : string
        - _points : int
    }
    enum Colour {
        Black
        White
    }

    Match *-- Board
    Board *-- Cell
    Cell *-- Piece
    Piece o-- Cell
}

namespace Controllers {
    class Chess {
        + main() 
        + StartGame()
        + Exit()
    }
    class GameController  {
        - _main : Chess
        + Turn (int start, int target) : bool
    }
    class ViewController  {
        - _main : Chess
    }

    Chess *-- GameController
    Chess *-- ViewController
}

namespace Views {
    class FormMenu {
        + BtnStart_Click() : void
        + BtnExit_Click() : void
    }
    class FormMatch {
        + Grid_Click() : void
    }
    class FormLeaderboard {
                   
    }
    class FormPromotion {
        
    }
}

Controllers.GameController *-- Models.Match
Controllers.Chess *-- Views.FormMenu
                      Controllers.ViewController *-- Views.FormMatch
                      Controllers.ViewController *-- Views.FormLeaderboard
Controllers.ViewController *-- Views.FormPromotion

@enduml